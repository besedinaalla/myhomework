JSON
 4. Создать внешний репозиторий c названием JSON.====		в GitHub: Repository-New-Repository name (JSON)-Public-Add a ReadMe file-Create Repository
 5. Клонировать репозиторий JSON на локальный компьютер.==== 	в GitHub: Code-скопировать Url
								в GitBash: git clone скопированный Url
 6. Внутри локального JSON создать файл “new.json”.====		cd JSON
								touch new.json (cat > new.json)

 7. Добавить файл под гит.==== 					git add new.json
 8. Закоммитить файл.====					git commit -m "New file"
 9. Отправить файл на внешний GitHub репозиторий.====		git push
 10. Отредактировать содержание файла “new.json”====		cat > new.json
								{"Name":"Alla",
								"Surname":"Besedina",
								"age":37,
								"Pet":"1(Hamster)",
								"Pay":"700-900$"}

 - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 11. Отправить изменения на внешний репозиторий.==== 		git add new.json
								git commit -m "Changes"
								git push
 12. Создать файл preferences.json ====				touch preferences.json
 13. В файл preferences.json ==== 				vim preferences.json
								i 
								{"film":"Forrest Gump",
								"serial":"This is Us",
								"food":"Pasta",
								"season":"Summer",
								"Country":"Italy"}

								esc :wq
добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
								cat > skills.json
								{"skill_1":"GitBash",
								"skill_2":"GitHub",
								"skill_3":"PostMan",
								"skill_4":"VPN",
								"skill_5":"androidStudio",
								"skill_6":"Charles"
								"skill_7":"SQL",
								"skill_8":"DevTools"}

 15. Отправить сразу 2 файла на внешний репозиторий.==== 	git add .
								git commit -m "Two files together"
								git push
 16. На веб интерфейсе создать файл bug_report.json.==== 	в GitHub:create new file-Name(bug_report.json)
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.==== в GitHub: Commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.====
								выбрать файл-Edit file (знак карандаша)-
								{"ID":"B1",

								"Project Name":"Abracadabra",

								"Version":"1.0",

								"Component":"Shopping cart",

								"Environment":"Google Chrome Версия 97.0.4692.71",

								"Title":"The Item hasn't added to shopping cart",

								"Steps":"1.Choose the item 2.Press the Buttom 'Buy'3.Check the cart",

								"Expected result":"The choosen item has added to shopping cart",

								"Actual result":" The Item hasn't add to shopping cart",

								"Priority":"High",
 "Severity":"Critical",

								"Reported by":"Besedina Alla",

								"Assigned by":"Ksendzov Vadim",

								"Status":"Open"

								}
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.==== Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON ====	git fetch
								git pull


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
 23. Внутри локального XML создать файл “new.xml”.
 24. Добавить файл под гит.
 25. Закоммитить файл.
 26. Отправить файл на внешний GitHub репозиторий.
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 28. Отправить изменения на внешний репозиторий.
 29. Создать файл preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 32. Сделать коммит в одну строку.
 33. Отправить сразу 2 файла на внешний репозиторий.
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML
TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.
 3. Внутри локального TXT создать файл “new.txt”.
 4. Добавить файл под гит.
 5. Закоммитить файл.
 6. Отправить файл на внешний GitHub репозиторий.
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 8. Отправить изменения на внешний репозиторий.
 9. Создать файл preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 12. Сделать коммит в одну строку.
 13. Отправить сразу 2 файла на внешний репозиторий.
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT